/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.stripe;

import android.app.Activity;
import android.content.Intent;

import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.util.TiActivityResultHandler;
import org.appcelerator.titanium.util.TiActivitySupport;

import com.stripe.android.PaymentConfiguration;

@Kroll.module(name="TitaniumStripe", id="ti.stripe")
public class TitaniumStripeModule extends KrollModule implements TiActivityResultHandler {
	private KrollFunction callback = null;

	@Kroll.method
	public void initialize(KrollDict params) {
		String publishableKey = params.getString("publishableKey");
		PaymentConfiguration.init(TiApplication.getAppRootOrCurrentActivity(), publishableKey);
	}

	@Kroll.method
	public void showPaymentSheet(KrollDict params) {
		callback = (KrollFunction) params.get("callback");

		String merchantDisplayName = params.getString("merchantDisplayName");
		String customerId = params.getString("customerId");
		String customerEphemeralKeySecret = params.getString("customerEphemeralKeySecret");
		String paymentIntentClientSecret = params.getString("paymentIntentClientSecret");

		if (callback == null || merchantDisplayName == null || customerId == null || customerEphemeralKeySecret == null || paymentIntentClientSecret == null) {
			Log.e("TiStripe", "Missing required parameters: callback, customerId, customerEphemeralKeySecret or paymentIntentClientSecret");
			return;
		}

		params.remove("callback");

		Intent intent = new Intent(TiApplication.getAppCurrentActivity(), TiStripeHostActivity.class);
		intent.putExtra("params", params);

		TiActivitySupport support = (TiActivitySupport) TiApplication.getInstance().getCurrentActivity();
		support.launchActivityForResult(intent, support.getUniqueResultCode(), this);
	}

	@Override
	public void onResult(Activity activity, int i, int i1, Intent intent) {
		if (intent == null) {
			return;
		}

		boolean success = intent.getBooleanExtra("success", false);
		boolean cancel = intent.getBooleanExtra("cancel", false);
		String error = intent.getStringExtra("error");

		KrollDict event = new KrollDict();
		event.put("success", success);
		event.put("cancel", cancel);
		event.put("error", error);

		callback.callAsync(getKrollObject(), event);
	}

	@Override
	public void onError(Activity activity, int i, Exception e) {
		KrollDict event = new KrollDict();
		event.put("success", false);
		event.put("cancel", false);
		event.put("error", e.getMessage());

		callback.callAsync(getKrollObject(), event);
	}
}

